<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rrenpin.dao.ResumeMapper">
  <resultMap id="BaseResultMap" type="com.rrenpin.entity.Resume">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="resume_name" jdbcType="VARCHAR" property="resumeName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_region" jdbcType="VARCHAR" property="empRegion" />
    <result column="work_exp" jdbcType="VARCHAR" property="workExp" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="work_type" jdbcType="VARCHAR" property="workType" />
    <result column="work_area" jdbcType="VARCHAR" property="workArea" />
    <result column="self_evaluation" jdbcType="VARCHAR" property="selfEvaluation" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="top_degree" jdbcType="VARCHAR" property="topDegree" />
  </resultMap>
  <sql id="Base_Column_List">
    id, resume_name, update_time, emp_name, emp_region, work_exp, sex, birth, status, 
    phone, email, user_id, salary, job, work_type, work_area, self_evaluation, head_img, 
    top_degree
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resume
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resume
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rrenpin.entity.Resume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into resume (id, resume_name, update_time, 
      emp_name, emp_region, work_exp, 
      sex, birth, status, 
      phone, email, user_id, 
      salary, job, work_type, 
      work_area, self_evaluation, head_img, 
      top_degree)
    values (#{id,jdbcType=INTEGER}, #{resumeName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{empName,jdbcType=VARCHAR}, #{empRegion,jdbcType=VARCHAR}, #{workExp,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birth,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{salary,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{workType,jdbcType=VARCHAR}, 
      #{workArea,jdbcType=VARCHAR}, #{selfEvaluation,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, 
      #{topDegree,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rrenpin.entity.Resume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="resumeName != null">
        resume_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empRegion != null">
        emp_region,
      </if>
      <if test="workExp != null">
        work_exp,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="workType != null">
        work_type,
      </if>
      <if test="workArea != null">
        work_area,
      </if>
      <if test="selfEvaluation != null">
        self_evaluation,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="topDegree != null">
        top_degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="resumeName != null">
        #{resumeName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empRegion != null">
        #{empRegion,jdbcType=VARCHAR},
      </if>
      <if test="workExp != null">
        #{workExp,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="workType != null">
        #{workType,jdbcType=VARCHAR},
      </if>
      <if test="workArea != null">
        #{workArea,jdbcType=VARCHAR},
      </if>
      <if test="selfEvaluation != null">
        #{selfEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="topDegree != null">
        #{topDegree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rrenpin.entity.Resume">
    update resume
    <set>
      <if test="resumeName != null">
        resume_name = #{resumeName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empRegion != null">
        emp_region = #{empRegion,jdbcType=VARCHAR},
      </if>
      <if test="workExp != null">
        work_exp = #{workExp,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="workType != null">
        work_type = #{workType,jdbcType=VARCHAR},
      </if>
      <if test="workArea != null">
        work_area = #{workArea,jdbcType=VARCHAR},
      </if>
      <if test="selfEvaluation != null">
        self_evaluation = #{selfEvaluation,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="topDegree != null">
        top_degree = #{topDegree,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rrenpin.entity.Resume">
    update resume
    set resume_name = #{resumeName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      emp_name = #{empName,jdbcType=VARCHAR},
      emp_region = #{empRegion,jdbcType=VARCHAR},
      work_exp = #{workExp,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      salary = #{salary,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      work_type = #{workType,jdbcType=VARCHAR},
      work_area = #{workArea,jdbcType=VARCHAR},
      self_evaluation = #{selfEvaluation,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      top_degree = #{topDegree,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findByUserId" parameterType="java.lang.Integer" resultType="java.util.Map">
  	select 
    <include refid="Base_Column_List" />
    from resume
    where user_id=#{userId,jdbcType=INTEGER} 
  </select>
  
  <select id="searchResume" resultType="java.util.Map">
    select 
      *,(select count(*) from resume where 
      (emp_name like #{keyword} or job like #{keyword})
      <if test="resumeIds != null and resumeIds.size() > 0">
        and id not in
        <foreach collection="resumeIds" item="resumeId" open="(" close=")" separator=",">
    	  #{resumeId}
        </foreach>
      </if>) as totalnum
    from resume
    where (emp_name like #{keyword} or job like #{keyword})
    <if test="resumeIds != null and resumeIds.size() > 0">
      and id not in
      <!-- 因为dao中添加了@Param("resumeIds")，所以此处collection="resumeIds" -->
      <foreach collection="resumeIds" item="resumeId" open="(" close=")" separator=",">
    	#{resumeId}
      </foreach>
    </if>
    limit #{offset},#{pageSize}
  </select>
  
  
</mapper>